# I saved public and private key of voter in DB. Whereas private key needs to be secured with voter only.

# Database Schema - Query 

        CREATE TABLE tally_results (
            result_id UUID PRIMARY KEY,
            election_id UUID REFERENCES elections(election_id) ON DELETE CASCADE,
            decrypted_result JSONB NOT NULL, -- E.g., { "candidate_A": 150, "candidate_B": 200 }
            created_at TIMESTAMP DEFAULT NOW()
        );


        CREATE TABLE audit_logs (
            log_id UUID PRIMARY KEY,
            voter_id UUID REFERENCES voters(voter_id) ON DELETE SET NULL,
            action VARCHAR(50) NOT NULL, -- E.g., 'vote_cast', 'registration'
            details JSONB, -- Additional metadata (e.g., IP address, device info)
            created_at TIMESTAMP DEFAULT NOW()
        );
        CREATE TABLE authorities (
            authority_id UUID PRIMARY KEY,
            public_key TEXT NOT NULL, -- Public key for MPC participation
            role VARCHAR(50) NOT NULL CHECK (role IN ('admin', 'decryption_authority')),
            created_at TIMESTAMP DEFAULT NOW()
        );
        CREATE TABLE votes (
            vote_id UUID PRIMARY KEY,
            election_id UUID REFERENCES elections(election_id) ON DELETE CASCADE,
            voter_id UUID REFERENCES voters(voter_id) ON DELETE CASCADE,
            encrypted_vote TEXT NOT NULL, -- FHE ciphertext (serialized as string)
            zkp_proof TEXT NOT NULL, -- Zero-Knowledge Proof for vote validity
            created_at TIMESTAMP DEFAULT NOW(),
            UNIQUE (election_id, voter_id) -- Ensure one vote per voter per election
        );
        CREATE TABLE candidates (
            candidate_id UUID PRIMARY KEY,
            election_id UUID REFERENCES elections(election_id) ON DELETE CASCADE,
            name VARCHAR(255) NOT NULL,
            party VARCHAR(255),
            description TEXT,
            created_at TIMESTAMP DEFAULT NOW()
        );
        CREATE TABLE elections (
            election_id UUID PRIMARY KEY,
            title VARCHAR(255) NOT NULL,
            description TEXT,
            start_time TIMESTAMP NOT NULL,
            end_time TIMESTAMP NOT NULL,
            status VARCHAR(20) CHECK (status IN ('draft', 'active', 'ended')) DEFAULT 'draft',
            fhe_public_key TEXT NOT NULL, -- FHE public key for vote encryption
            created_at TIMESTAMP DEFAULT NOW()
        );
        CREATE TABLE voters (
            voter_id UUID PRIMARY KEY,
            name TEXT NOT NULL
            email VARCHAR(255) UNIQUE NOT NULL,
            dilithium_public_key TEXT NOT NULL, -- Dilithium public key for authentication
            dilithium_private_key TEXT NOT NULL,
            is_registered BOOLEAN DEFAULT FALSE,
            is_voted BOOLEAN DEFAULT FALSE, -- Prevents double voting
            created_at TIMESTAMP DEFAULT NOW(),
            updated_at TIMESTAMP DEFAULT NOW()
        );


